junc_t_prop_g1 <- junc_t_sum_g1 / (junc_t_sum_g1 + junc_t_sum_g2)
junc_t_prop_g2 <- junc_t_sum_g2 / (junc_t_sum_g1 + junc_t_sum_g2)
junc_t_prop_diff <- abs( junc_t_prop_g1 - junc_t_prop_g2 )
junction_a <- junction_a[ junc_a_prop_diff < quantile( junc_a_prop_diff, 0.95 ) ,]
junction_t <- junction_t[ junc_t_prop_diff < quantile( junc_t_prop_diff, 0.95 ) ,]
@
<<label=write_out_one/both_lists, echo=FALSE>>=
# here I'll make a factor to indicate whether both pairs have >0 alt counts
g1_alts_only <- factor( ifelse( junction_a$g2_all_alts == 0 & junction_a$g1_all_alts != 0,  1, 0))
g2_alts_only <- factor( ifelse( junction_a$g1_all_alts == 0 & junction_a$g2_all_alts != 0,  1, 0))
junction_a$one_gene_alts_only <- factor( ifelse( g1_alts_only==0 & g2_alts_only==0, "both", "one"))
# and the same thing for the tandems
g1_alts_only <- factor( ifelse( junction_t$g2_all_alts == 0 & junction_t$g1_all_alts != 0,  1, 0))
g2_alts_only <- factor( ifelse( junction_t$g1_all_alts == 0 & junction_t$g2_all_alts != 0,  1, 0))
junction_t$one_gene_alts_only <- factor( ifelse( g1_alts_only==0 & g2_alts_only==0, "both", "one"))
# how many rows make it through the threshold by only 1 or a few reads...
write.table( junction_a[ junction_a$one_gene_alts_only=="both", ], "../outputs/alphas_both.tsv", sep="\t", quote=F )
write.table( junction_a[ junction_a$one_gene_alts_only=="one", ], "../outputs/alphas_one.tsv", sep="\t", quote=F )
write.table( junction_t[ junction_t$one_gene_alts_only=="both", ], "../outputs/tandems_both.tsv", sep="\t", quote=F )
write.table( junction_t[ junction_t$one_gene_alts_only=="one", ], "../outputs/tandems_one.tsv", sep="\t", quote=F )
@
First interesting finding: percentage of events which paralogs have the same event at the equivalent junction.\
<<label=%age_quant_cons, echo=FALSE, results=verbatim>>=
print( 'alphas' )
round( summary( junction_a$one_gene_alts_only ) / dim( junction_a )[1], 2)
print( 'tandems' )
round( summary( junction_t$one_gene_alts_only ) / dim( junction_t )[1], 2)
@
<<label=qual_tables,echo=FALSE,results=tex>>=
tab_a <-  c(length( junction_a$class2[ junction_a$class2=="IR" & junction_a$one_gene_alts_only=="both"] ),
length( junction_a$class2[ junction_a$class2=="IR" & junction_a$one_gene_alts_only=="one"] ),
length( junction_a$class2[ junction_a$class2=="ALTA" & junction_a$one_gene_alts_only=="both"] ),
length( junction_a$class2[ junction_a$class2=="ALTA" & junction_a$one_gene_alts_only=="one"] ),
length( junction_a$class2[ junction_a$class2=="ALTD" & junction_a$one_gene_alts_only=="both"] ),
length( junction_a$class2[ junction_a$class2=="ALTD" & junction_a$one_gene_alts_only=="one"] ),
length( junction_a$class2[ junction_a$class2=="ALTP" & junction_a$one_gene_alts_only=="both"] ),
length( junction_a$class2[ junction_a$class2=="ALTP" & junction_a$one_gene_alts_only=="one"] ),
length( junction_a$class2[ junction_a$one_gene_alts_only=="both"]),
length( junction_a$class2[ junction_a$one_gene_alts_only=="one"]) )
tab_mat_a <- matrix( tab_a, ncol=2, byrow=T )
tab_mat_a <- cbind( tab_mat_a, c((tab_mat_a[,1] / (tab_mat_a[,1] + tab_mat_a[,2]) ) *100) )
table1 <- xtable( matrix(tab_mat_a, ncol=3, dimnames=list( c("IR", "ALTA", "ALTD", "ALTP", "total"), c("conserved", "not conserved", "%age conservation")) ), digits=c(0,0,0,1), caption="alphas" )
tab_t <-  c(length( junction_t$class2[ junction_t$class2=="IR" & junction_t$one_gene_alts_only=="both"] ),
length( junction_t$class2[ junction_t$class2=="IR" & junction_t$one_gene_alts_only=="one"] ),
length( junction_t$class2[ junction_t$class2=="ALTA" & junction_t$one_gene_alts_only=="both"] ),
length( junction_t$class2[ junction_t$class2=="ALTA" & junction_t$one_gene_alts_only=="one"] ),
length( junction_t$class2[ junction_t$class2=="ALTD" & junction_t$one_gene_alts_only=="both"] ),
length( junction_t$class2[ junction_t$class2=="ALTD" & junction_t$one_gene_alts_only=="one"] ),
length( junction_t$class2[ junction_t$class2=="ALTP" & junction_t$one_gene_alts_only=="both"] ),
length( junction_t$class2[ junction_t$class2=="ALTP" & junction_t$one_gene_alts_only=="one"] ),
length( junction_t$class2[ junction_t$one_gene_alts_only=="both"] ),
length( junction_t$class2[ junction_t$one_gene_alts_only=="one"] ))
tab_mat_t <- matrix( tab_t, ncol=2, byrow=T )
tab_mat_t <- cbind( tab_mat_t, c((tab_mat_t[,1] / (tab_mat_t[,1] + tab_mat_t[,2]) ) *100) )
table2 <- xtable( matrix(tab_mat_t, ncol=3, dimnames=list( c("IR", "ALTA", "ALTD", "ALTP", "total"), c("conserved", "not conserved", "%age conservation")) ), digits=c(0,0,0,1), caption="tandems" )
print( table1, include.rownames=T )
print( table2, include.rownames=T )
# output lists to represent each cell in table
# think about making one big table to map the whole process from filtering to end...
@
<<label=dim_check, echo=FALSE, include=TRUE>>=
summary( junction_a$one_gene_alts_only )
summary( junction_a$one_gene_alts_only[ junction_a$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>5 ] & junction_a$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>5 ] ] )
summary( junction_a$one_gene_alts_only[ junction_a$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>8 ] & junction_a$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>8 ] ] )
summary( junction_t$one_gene_alts_only )
summary( junction_t$one_gene_alts_only[ junction_t$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>5 ] & junction_t$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>5 ] ] )
summary( junction_t$one_gene_alts_only[ junction_t$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>8 ] & junction_t$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>8 ] ] )
@
The patterns are pretty similar between tandems and alphas, in that only 29--32\% of junctions show alternative splicing at \textit{both} paralogs. Another way to look at this question would be to look at the difference in the number of alternative reads (fig3).\
\begin{figure}[h]
\begin{center}
<<label=figure_3, fig=TRUE,include = TRUE, echo=FALSE>>=
pdf( "../outputs/alt_splice_diffs.pdf" )
par( mfrow= c(2,1) )
hist( junction_a$g1_all_alts - junction_a$g2_all_alts, xlim=c(-500,500), breaks=100, main="alphas",
xlab="g1 alt. count - g2 alt. count" )
hist( junction_t$g1_all_alts - junction_t$g2_all_alts, xlim=c(-500,500), breaks=100, main="tandems",
xlab="g1 alt. count - g2 alt. count" )
par( mfrow= c(1,1) )
dev.off()
@
\end{center}
\caption{Difference in alternative splice read count between paralogs}
\label{fig:fig3}
\end{figure}
<<label=qdiff,echo=FALSE,include=FALSE, results=hide>>=
summary( junction_a$g1_all_alts - junction_a$g2_all_alts )
summary( junction_t$g1_all_alts - junction_t$g2_all_alts )
ma <- max( abs( junction_a$g1_all_alts - junction_a$g2_all_alts ))
mt <- max( abs( junction_t$g1_all_alts - junction_t$g2_all_alts ))
junction_a$qdiff <- abs( ((junction_a$g1_all_alts) / junction_a$g1_all_cons) -
((junction_a$g2_all_alts) / junction_a$g2_all_cons ))
junction_t$qdiff <- abs( ((junction_t$g1_all_alts) / junction_t$g1_all_cons) -
((junction_t$g2_all_alts) / junction_t$g2_all_cons ))
write.table( junction_a[ order( junction_a$qdiff, decreasing=T ), ], "../outputs/alpha_junction_ordered.tsv", sep='\t', quote=F )
write.table( junction_t[ order( junction_t$qdiff, decreasing=T ), ], "../outputs/tandem_junction_ordered.tsv", sep='\t', quote=F)
@
I've trimmed the x-axis of these plots because there are a few very large differences that, if included, make the plot look like 1 column in the middle of a field. The differences max out at $\Sexpr{ma}$ in the alphas and at $\Sexpr{mt}$ in the tandems. Of course, this does not take account of how much each paralog is being expressed, so as an alternative I'm going to standardize the counts of alternative splicing events by the respective counts of constitutive splicing events. Seeing as the paralogs `g1' \& `g2' are arbitrary (I assume), I'm also going to express this proportional difference in absolute terms (fig4).\
\begin{figure}[h]
\begin{center}
<<label=figure_4, fig=TRUE,include = TRUE, echo=FALSE>>=
pdf( "../outputs/alt_splice_prop_diffs.pdf" )
par( mfrow= c(2,1) )
hist( abs((junction_a$g1_all_alts / junction_a$g1_all_cons) - (junction_a$g2_all_alts / junction_a$g2_all_cons)),
breaks=50, main="alphas", xlab="g1 alt. prop. - g2 alt. prop." )
hist( abs((junction_t$g1_all_alts / junction_t$g1_all_cons) - (junction_t$g2_all_alts / junction_t$g2_all_cons)),
breaks=50, main="tandems", xlab="g1 alt. prop. - g2 alt. prop." )
par( mfrow= c(1,1) )
dev.off()
@
\end{center}
\caption{Difference in alternative splice read proportion between paralogs}
\label{fig:fig4}
\end{figure}
This graph needs less trimming, but the point to take away is that in those pairs where both paralogs are alternatively splicing, both partners appear to be alternatively splicing at similar levels in the vast majority of cases. Another way of expressing this would be to note the maximum and median levels of difference in counts; for the alphas these are max= $\Sexpr{max( abs(junction_a$g1_all_alts - junction_a$g2_all_alts) )}$ and median= $\Sexpr{median( abs(junction_a$g1_all_alts - junction_a$g2_all_alts) )}$, and for the tandems these are max= $\Sexpr{max( abs(junction_t$g1_all_alts - junction_t$g2_all_alts) )}$ and median= $\Sexpr{median( abs(junction_t$g1_all_alts - junction_t$g2_all_alts) )}$, i.e. the `typical' level of difference is comparatively small.\
And finally, while we're working qualitatively, I'm going to try and address the question of whether event class/category is at all predictive of (lack of) conservation. Looking at the figures (fig5 \& fig6) there don't appear to be any striking differences in the means, though some classes are more variable than others. When I run linear models to fit the difference in alternative reads as a function of event class I find that in the alphas there is statistical support for `IR' having smaller differences than `ALTA', but this model is probably overpowered due to the big sample size, since the adjusted R-squared is approx. 0.01 (i.e. the model accounts for 1\% of the variation). In the tandems, there is a different picture, with the only statistically supported diffrence being that `ALTP' junctions have larger differences than the other types. (model still accounting for only 4\% variance though) Long story short; there is no compelling evidence that class is particulary informative about qualitative conservation.\
<<label=model_AS_level_by_class, echo=FALSE, results=verbatim>>=
# express as a proportion for extra-samrt-times
classmod_a <- lm( abs(junction_a$g1_all_alts - junction_a$g2_all_alts) ~ junction_a$class2 )
print( 'alphas' )
summary(classmod_a)
summary( junction_a$class2 )
chi_Alpha <- chisq.test(tab_mat_a[, 1:2 ], rev( levels( junction_a$class2 ) ), simulate.p.value=T )
chi_Alpha     ;     chi_Alpha$observed - chi_Alpha$expected     ;     rev( levels( junction_a$class2 ))
classmod_t <- lm( abs(junction_t$g1_all_alts - junction_t$g2_all_alts) ~ junction_t$class2 )
print( 'tandems' )
summary(classmod_t)
summary( junction_t$class2 )
chi_Tandem <- chisq.test(tab_mat_t[, 1:2 ], rev( levels( junction_t$class2 ) ), simulate.p.value=T )
chi_Tandem     ;     chi_Tandem$observed - chi_Tandem$expected     ;     rev( levels( junction_t$class2 ))
@
\begin{figure}[h]
\begin{center}
<<label=figure_5, fig=TRUE,include = TRUE, echo=FALSE>>=
pdf( "../outputs/alt_splice_diffs_by_class_alpha.pdf" )
ggplot(junction_a, aes(x=junction_a$class, y= log10( abs(junction_a$g1_all_alts - junction_a$g2_all_alts)))) +
geom_point(colour="blue", alpha=0.4, position="jitter") +
geom_boxplot(outlier.size=0.5, alpha=0.4) + coord_flip() +
scale_x_discrete(name="event class") +
scale_y_continuous(name="(log) read count difference between paralogs") + ggtitle("Alphas")
dev.off()
@
\end{center}
\caption{Difference in alternative splice read no.s by event class (alphas)}
\label{fig:fig5}
\end{figure}
\begin{figure}[h]
\begin{center}
<<label=figure_6, fig=TRUE,include = TRUE, echo=FALSE>>=
pdf( "../outputs/alt_splice_diffs_by_class_tandems.pdf" )
ggplot(junction_t, aes(x=junction_t$class, y= log10( abs(junction_t$g1_all_alts - junction_t$g2_all_alts)))) +
geom_point(colour="blue", alpha=0.4, position="jitter") +
geom_boxplot(outlier.size=0.5, alpha=0.4) + coord_flip() +
scale_x_discrete(name="event class") +
scale_y_continuous(name="(log) read count difference between paralogs") + ggtitle("Tandems")
dev.off()
@
\end{center}
\caption{Difference in alternative splice read no.s by event class (tandems)}
\label{fig:fig6}
\end{figure}
\section{Quantitative analyses}
<<label=test_quant_cons, echo=FALSE,results=hide>>=
# here I'm going to use the log. reg. to ask about quantitative conservation... but only for those events that are qualitatively conserved
# then: does the event class have an influence?
junction_a2 <- junction_a[ junction_a$one_gene_alts_only=="both", ]
junction_t2 <- junction_t[ junction_t$one_gene_alts_only=="both", ]
junction_a2$uniqID <- factor( junction_a2$uniqID )
junction_t2$uniqID <- factor( junction_t2$uniqID )
dim( junction_a2 )
dim( junction_a2[ junction_a2$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>5 ] & junction_a2$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>5 ], ] )
dim( junction_a2[ junction_a2$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>8 ] & junction_a2$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>8 ], ] )
dim( junction_t2 )
dim( junction_t2[ junction_t2$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>5 ] & junction_t2$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>5 ], ] )
dim( junction_t2[ junction_t2$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>8 ] & junction_t2$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>8 ], ] )
# ## SECOND ALTERNATE FILTER <- QUAL. CONS. BUT CONS *&* ALTS NEED 5-READ MIN
# junction_a3 <- junction_a2[ junction_a2$g1r1alt >5 & junction_a2$g1r1alt >5 & junction_a2$g1r1alt >5 &
#                             junction_a2$g2r1alt >5 & junction_a2$g2r1alt >5 & junction_a2$g2r1alt >5, ]
# junction_t3 <- junction_t2[ junction_t2$g1r1alt >5 & junction_t2$g1r1alt >5 & junction_t2$g1r1alt >5 &
#                             junction_t2$g2r1alt >5 & junction_t2$g2r1alt >5 & junction_t2$g2r1alt >5, ]
#
# junction_a3$uniqID <- factor( junction_a3$uniqID )
# junction_t3$uniqID <- factor( junction_t3$uniqID )
#
# ## THIRD ALTERNATE FILTER <- QUAL. CONS. BUT CONS *&* ALTS NEED 5-READ MIN
# junction_a4 <- junction_a2[ junction_a2$g1_all_alts >5 & junction_a2$g2_all_alts >5, ]
# junction_t4 <- junction_t2[ junction_t2$g1_all_alts >5 & junction_t2$g2_all_alts >5, ]
#
# junction_a4$uniqID <- factor( junction_a4$uniqID )
# junction_t4$uniqID <- factor( junction_t4$uniqID )
arabistats <- function( junc ){
num <- nlevels( junc$uniqID )
IDs <-  levels( junc$uniqID )
out <- matrix( NA, ncol=4, nrow=num )
for (i in 1:num) {
thisjunc <- junc[ junc$uniqID == IDs[i] ,]
cons <- c( thisjunc$g1r1cons, thisjunc$g1r2cons, thisjunc$g1r3cons, thisjunc$g2r1cons, thisjunc$g2r2cons, thisjunc$g2r3cons )
alts <- c( thisjunc$g1r1alt, thisjunc$g1r2alt, thisjunc$g1r3alt, thisjunc$g2r1alt, thisjunc$g2r2alt, thisjunc$g2r3alt )
gene <- factor(c( rep("0", 3), rep("1", 3) ))
thismodel <- glm( cbind( cons, alts ) ~ gene, family= binomial )
out[i,1] <- summary( thismodel )$coef[2,4]
out[i,2:3] <- summary( thismodel )$coef[1:2,1]
out[i,4] <- Rsq( thismodel )
}
Out <- data.frame( junc$pair, IDs, out, junc$class, junc$class2 )
names( Out ) <- c("pair", "IDs", "p_val", "estimate_con", "estimate_alt", "gene_Rsq", "class", "class2" )
Out
}
alpha <- arabistats( junction_a2 )
tandem <- arabistats( junction_t2 )
alpha$pair_1 <- factor( substr( as.character( alpha$pair ), 1, 9 ) )
alpha$pair_2 <- factor( substr( as.character( alpha$pair ), 11, 20 ) )
tandem$pair_1 <- factor( substr( as.character( tandem$pair ), 1, 9 ) )
tandem$pair_2 <- factor( substr( as.character( tandem$pair ), 11, 20 ) )
dim( alpha )
dim( alpha[ alpha$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>5 ] & alpha$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>5 ] ,] )
dim( alpha[ alpha$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>8 ] & alpha$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>8 ] ,] )
dim( tandem )
dim( tandem[ tandem$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>5 ] & tandem$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>5 ] ,] )
dim( tandem[ tandem$pair_1 %in% all_reads$gene_name[ all_reads$no_reads>8 ] & tandem$pair_2 %in% all_reads$gene_name[ all_reads$no_reads>8 ] ,] )
# alpha <- arabistats( junction_a3 )
# tandem <- arabistats( junction_t3 )
# alpha <- arabistats( junction_a4 )
# tandem <- arabistats( junction_t4 )
dim( alpha )
dim( tandem )
length( alpha$p_val[ alpha$p_val < 0.05 ] ) / length( alpha$p_val )
length( tandem$p_val[ tandem$p_val < 0.05 ] ) / length( tandem$p_val )
alpha$sig <- factor( ifelse( alpha$p_val < 0.05, "diff", "cons" ) )
table( alpha$class2, alpha$sig )
tandem$sig <- factor( ifelse( tandem$p_val < 0.05, "diff", "cons" ) )
table( tandem$class2, tandem$sig )
max( alpha$gene_Rsq[ alpha$p_val < 0.05 ] )
median( alpha$gene_Rsq[ alpha$p_val < 0.05 ] )
max( tandem$gene_Rsq[ tandem$p_val < 0.05 ] )
median( tandem$gene_Rsq[ tandem$p_val < 0.05 ] )
@
In this section, I'm going to take the subset of the data where both paralogs are splicing alternatively and examine patterns quantitatively. To do this I'm fitting a logistic regression to the constitutive/alternative counts from each pair. Once again, the alphas and the tandems show similar levels of difference, with statistical support for quantitative differences in 58--68\% of pairs (where both paralogs are splicing alternatively). The effects sizes have a very skewed distribution (fig7), with many small differences and a few larger ones, with only a very few very large differences. These few oddballs (far off to the right in fig7) would be one set of potentially `interesting' candidates for biological story-telling.
<<label=quant_tables,echo=FALSE,results=tex>>=
tab_a2 <- c(length( alpha$class2[ alpha$class2=="IR" & alpha$p_val >= 0.05] ),
length( alpha$class2[ alpha$class2=="IR" & alpha$p_val < 0.05] ),
length( alpha$class2[ alpha$class2=="ALTA" & alpha$p_val >= 0.05] ),
length( alpha$class2[ alpha$class2=="ALTA" & alpha$p_val < 0.05] ),
length( alpha$class2[ alpha$class2=="ALTD" & alpha$p_val >= 0.05] ),
length( alpha$class2[ alpha$class2=="ALTD" & alpha$p_val < 0.05] ),
length( alpha$class2[ alpha$class2=="ALTP" & alpha$p_val >= 0.05] ),
length( alpha$class2[ alpha$class2=="ALTP" & alpha$p_val < 0.05] ),
length( alpha$class2[ alpha$p_val >= 0.05]),
length( alpha$class2[ alpha$p_val < 0.05]) )
tab_mat_a2 <- matrix( tab_a2, ncol=2, byrow=T )
tab_mat_a2 <- cbind( tab_mat_a2, c((tab_mat_a2[,1] / (tab_mat_a2[,1] + tab_mat_a2[,2]) ) *100) )
table3 <- xtable( matrix(tab_mat_a2, ncol=3, dimnames=list( c("IR", "ALTA", "ALTD", "ALTP", "total"),
c("conserved", "not conserved", "%age conservation")) ), digits=c(0,0,0,1),
caption="alphas - quantitative conservation" )
tab_b2 <-c(length( tandem$class2[ tandem$class2=="IR" & tandem$p_val >= 0.05] ),
length( tandem$class2[ tandem$class2=="IR" & tandem$p_val < 0.05] ),
length( tandem$class2[ tandem$class2=="ALTA" & tandem$p_val >= 0.05] ),
length( tandem$class2[ tandem$class2=="ALTA" & tandem$p_val < 0.05] ),
length( tandem$class2[ tandem$class2=="ALTD" & tandem$p_val >= 0.05] ),
length( tandem$class2[ tandem$class2=="ALTD" & tandem$p_val < 0.05] ),
length( tandem$class2[ tandem$class2=="ALTP" & tandem$p_val >= 0.05] ),
length( tandem$class2[ tandem$class2=="ALTP" & tandem$p_val < 0.05] ),
length( tandem$class2[ tandem$p_val >= 0.05]),
length( tandem$class2[ tandem$p_val < 0.05]) )
tab_mat_b2 <- matrix( tab_b2, ncol=2, byrow=T )
tab_mat_b2 <- cbind( tab_mat_b2, c((tab_mat_b2[,1] / (tab_mat_b2[,1] + tab_mat_b2[,2]) ) *100) )
table4 <- xtable( matrix( tab_mat_b2, ncol=3, dimnames=list( c("IR", "ALTA", "ALTD", "ALTP", "total"),
c("conserved", "not conserved", "%age conservation")) ), digits=c(0,0,0,1),
caption="tandems - quantitative conservation" )
print( table3 )
print( table4 )
@
\begin{figure}[h]
\begin{center}
<<label=figure_7, fig=TRUE,include = TRUE, echo=FALSE>>=
pdf( "../outputs/alt_v_con_splice_diffs_effectsize.pdf" )
par( mfrow= c(2,1))
hist( alpha$gene_Rsq[ alpha$p_val < 0.05 ], breaks=30, main="alphas", xlab="model R-squared" )
hist( tandem$gene_Rsq[ tandem$p_val < 0.05 ], breaks=30, main="tandems", xlab="model R-squared" )
par( mfrow= c(1,1))
dev.off()
@
\end{center}
\caption{Distribution of effect sizes for those pairs with significantly different patterns of alternative vs. constitutive splicing}
\label{fig:fig7}
\end{figure}
Now I'm going to make some stacked bar charts These at least should go some way to illustrating the low level of event conservation that we're dealing with.
<<label=pie_bar_data,echo=FALSE,results=hide>>=
pie_data_a <- c( summary(junction_a$class2[ junction_a$one_gene_alts_only=="one" ]),
( summary(junction_a$class2[ junction_a$one_gene_alts_only=="both" ]) -
summary( alpha$class2[ alpha$sig=="cons" ] )),
summary( alpha$class2[ alpha$sig=="cons" ] ))
pie_data_mat_a  <- matrix( pie_data_a, ncol=4, byrow=T, dimnames=list( c("non.cons", "qual.cons", "quant.cons"), names(pie_data_a)[1:4] ))
pie_data_t <- c( summary(junction_t$class2[ junction_t$one_gene_alts_only=="one" ]),
( summary(junction_t$class2[ junction_t$one_gene_alts_only=="both" ]) -
summary( tandem$class2[ tandem$sig=="cons" ] )),
summary( tandem$class2[ tandem$sig=="cons" ] ))
pie_data_mat_t  <- matrix( pie_data_t, ncol=4, byrow=T, dimnames=list( c("non.cons", "qual.cons", "quant.cons"), names(pie_data_a)[1:4] ))
barplot( pie_data_mat_a, cex.axis=0.5, cex.names=0.7, legend.text=row.names(pie_data_mat_a), args.legend=list(x=3, y=2000, cex=0.7), col=c( "firebrick", "chocolate", "goldenrod" ), border=NA, space=0.1, xaxt='n' )
axis( side=1, at=c( 0.7, 1.7, 2.7, 3.8 ), c("ALTA", "ALTD", "ALTP", "IR"), las=2, cex.axis=0.75 )
barplot( pie_data_mat_t, cex.axis=0.5, cex.names=0.7, legend.text=row.names(pie_data_mat_t), args.legend=list(x=3, y=600, cex=0.7), col=c( "firebrick", "chocolate", "goldenrod" ), border=NA, space=0.1, xaxt='n' )
axis( side=1, at=c( 0.7, 1.7, 2.7, 3.8 ), c("ALTA", "ALTD", "ALTP", "IR"), las=2, cex.axis=0.75 )
@
<<label=combined_tables_for_MS, echo=FALSE, results=tex>>=
tab_a3 <- c( length( alpha$class2[ alpha$class2=="IR" & alpha$p_val >= 0.05] ),
length(junction_a$class2[junction_a$class2=="IR"])-length(alpha$class2[alpha$class2=="IR" & alpha$p_val >=0.05]),
length( alpha$class2[ alpha$class2=="ALTA" & alpha$p_val >= 0.05] ),
length(junction_a$class2[junction_a$class2=="ALTA"])-length(alpha$class2[alpha$class2=="ALTA"&alpha$p_val>=0.05]),
length( alpha$class2[ alpha$class2=="ALTD" & alpha$p_val >= 0.05] ),
length(junction_a$class2[junction_a$class2=="ALTD"])-length(alpha$class2[alpha$class2=="ALTD"&alpha$p_val>=0.05]),
length( alpha$class2[ alpha$class2=="ALTP" & alpha$p_val >= 0.05] ),
length(junction_a$class2[junction_a$class2=="ALTP"])-length(alpha$class2[alpha$class2=="ALTP"&alpha$p_val>=0.05]),
length( alpha$class2[ alpha$p_val >= 0.05]),
length(junction_a$class2)-length( alpha$class2[ alpha$p_val>=0.05 ] ) )
tab_mat_a3 <- matrix( tab_a3, ncol=2, byrow=T )
tab_mat_a3 <- cbind( tab_mat_a3, c((tab_mat_a3[,1] / (tab_mat_a3[,1] + tab_mat_a3[,2]) ) *100) )
table_5 <- xtable( matrix(tab_mat_a3, ncol=3, dimnames=list( c("IR", "ALTA", "ALTD", "ALTP", "total"),
c("conserved", "not conserved", "%age conservation")) ), digits=c(0,0,0,1),
caption="alphas - overall conservation" )
tab_t3 <- c( length( tandem$class2[ tandem$class2=="IR" & tandem$p_val >= 0.05] ),
length(junction_t$class2[junction_t$class2=="IR"])-length(tandem$class2[tandem$class2=="IR" & tandem$p_val >=0.05]),
length( tandem$class2[ tandem$class2=="ALTA" & tandem$p_val >= 0.05] ),
length(junction_t$class2[junction_t$class2=="ALTA"])-length(tandem$class2[tandem$class2=="ALTA"&tandem$p_val>=0.05]),
length( tandem$class2[ tandem$class2=="ALTD" & tandem$p_val >= 0.05] ),
length(junction_t$class2[junction_t$class2=="ALTD"])-length(tandem$class2[tandem$class2=="ALTD"&tandem$p_val>=0.05]),
length( tandem$class2[ tandem$class2=="ALTP" & tandem$p_val >= 0.05] ),
length(junction_t$class2[junction_t$class2=="ALTP"])-length(tandem$class2[tandem$class2=="ALTP"&tandem$p_val>=0.05]),
length( tandem$class2[ tandem$p_val >= 0.05]),
length(junction_t$class2)-length( tandem$class2[ tandem$p_val>=0.05 ] ) )
tab_mat_t3 <- matrix( tab_t3, ncol=2, byrow=T )
tab_mat_t3 <- cbind( tab_mat_t3, c((tab_mat_t3[,1] / (tab_mat_t3[,1] + tab_mat_t3[,2]) ) *100) )
table_6 <- xtable( matrix(tab_mat_t3, ncol=3, dimnames=list( c("IR", "ALTA", "ALTD", "ALTP", "total"),
c("conserved", "not conserved", "%age conservation")) ), digits=c(0,0,0,1),
caption="tandems - overall conservation" )
print( table_5 )
print( table_6 )
@
<<label=writing_out_lists_for_DT, echo=FALSE, results=hide>>=
# _non_cons will be junctions with obviously alternative patterns
# _qual_cons will be junctions that are qualitively conserved, but not quantitatively so
# _quant_cons will be junctions that are conserved no matter how I test it.
alpha_non_cons <- junction_a[ junction_a$one_gene_alts_only=="one", ]
alpha_qual_cons <- junction_a[ junction_a$one_gene_alts_only=="both" &
junction_a$uniqID %in% alpha$IDs[ alpha$sig=="diff" ] ,]
alpha_quant_cons <- junction_a[ junction_a$one_gene_alts_only=="both" &
junction_a$uniqID %in% alpha$IDs[ alpha$sig=="cons" ] ,]
write.csv( alpha_non_cons[ order( alpha_non_cons$qdiff, decreasing=T) ,], "../outputs/alpha_non_cons.csv", quote=F, row.names=F )
write.csv( alpha_qual_cons[ order( alpha_qual_cons$qdiff, decreasing=T) ,], "../outputs/alpha_qual_cons.csv", quote=F, row.names=F )
write.csv( alpha_quant_cons[ order( alpha_quant_cons$qdiff, decreasing=T) ,], "../outputs/alpha_quant_cons.csv", quote=F, row.names=F )
tandem_non_cons <- junction_t[ junction_t$one_gene_alts_only=="one", ]
tandem_qual_cons <- junction_t[ junction_t$one_gene_alts_only=="both" &
junction_t$uniqID %in% tandem$IDs[ tandem$sig=="diff" ] ,]
tandem_quant_cons <- junction_t[ junction_t$one_gene_alts_only=="both" &
junction_t$uniqID %in% tandem$IDs[ tandem$sig=="cons" ] ,]
write.csv( tandem_non_cons[ order( tandem_non_cons$qdiff, decreasing=T) ,], "../outputs/tandem_non_cons.csv", quote=F, row.names=F )
write.csv( tandem_qual_cons[ order( tandem_qual_cons$qdiff, decreasing=T) ,], "../outputs/tandem_qual_cons.csv", quote=F, row.names=F )
write.csv( tandem_quant_cons[ order( tandem_quant_cons$qdiff, decreasing=T) ,],"../outputs/tandem_quant_cons.csv", quote=F, row.names=F)
@
\begin{figure}[h]
\begin{center}
<<label=figure_8, fig=TRUE,include = TRUE, echo=FALSE>>=
pdf( "../outputs/pie_replacement_bars.pdf" )
par( mfrow= c(1,2) )
barplot( pie_data_mat_a, cex.axis=1, cex.names=1, col=c( "firebrick", "cornflowerblue", "forestgreen" ), border=NA, space=0.1, xaxt='n', main="Alpha WG duplicates" )
axis( side=1, at=c( 0.7, 1.7, 2.7, 3.8 ), c("ALTA", "ALTD", "ALTP", "IR"), las=2, cex.axis=1.25 )
barplot( pie_data_mat_t, cex.axis=1, cex.names=1, col=c( "firebrick", "cornflowerblue", "forestgreen" ), border=NA, space=0.1, xaxt='n', main="Tandem duplicates" )
axis( side=1, at=c( 0.7, 1.7, 2.7, 3.8 ), c("ALTA", "ALTD", "ALTP", "IR"), las=2, cex.axis=1.25 )
#     legend( "topright", inset=c(-0.6, 0), legend=rev( row.names(pie_data_mat_a)),
#             fill=rev( c( "firebrick", "cornflowerblue", "forestgreen" )), cex=1.5  )
dev.off()
@
\end{center}
\caption{}
\label{fig:fig8}
\end{figure}
\section*{Nonsense Mediated Decay}
The next question to address is whether singletons or duplicates are more likely to experience NMD. I shall test this with a Chi-squared -- note that the observed and expected numbers are not \textit{radically} different, and that p-values are large and the effect size coefficients are correspondingly small.
<<label=sing_dup_chisq, echo=FALSE, results=verbatim>>=
# numbers from Tack: singletons 2868 without nmd, 195 with duplicates 22592 without, 1724 with
Y <- matrix( c(2868, 22592, 195, 1724), ncol=2, dimnames=list( c("sing", "dup"), c("w/o", "with") ) )
# Y
chY <- chisq.test( Y, simulate.p.value=T )
print( 'observed values' )
chY$observed
print( 'expected values' )
chY$expected
# chY$residuals
print( 'statistics' )
assocstats( Y )
@
Next I'll use another chi-squared to test for a pattern in NMD between paralog pairs. Here there appears to be something interesting going on. Note that the off-diagonal values (where only 1 partner experiences NMD) are somewhat smaller than expected, and that the number of pairs where both paralogs experience NMD is \textit{3 times} the expected value. Paralog pairs seem to be more likely to experience NMD -- note tiny p-values and comparatively large effect size coefficients.
<<label=paralog_pairs_chisq, echo=FALSE, results=verbatim>>=
# numbers from Tack for paralog pairs and NMD: NN 1317, NY 98, YN 90, YY 34
X <- matrix(c(1317, 98, 90, 34), ncol=2, dimnames=list( c("N", "Y"), c("N", "Y") ) )
# X
chX <- chisq.test( X, simulate.p.value=T )
print('observed values' )
chX$observed
print( 'expected values' )
chX$expected
print( 'statistics' )
assocstats( X )
@
Now I'm going to read in the `NMD\_out\_--' files and combine them with the junciton data in order to ask some more quantitative questions about NMD.
<<label=quant_NMD_analysis, echo=FALSE, results=verbatim>>=
junction_a$quant_con <- rep( "N", nrow( junction_a ) )
junction_a$quant_con[ junction_a$uniqID %in% alpha$IDs[ alpha$sig=="cons" ] ] <- "Y"
junction_t$quant_con <- rep( "N", nrow( junction_t ) )
junction_t$quant_con[ junction_t$uniqID %in% tandem$IDs[ tandem$sig=="cons" ] ] <- "Y"
# first up i need to read in the NMD data
nmd_alpha <- read.csv( "../data/nmd_out_2_alphas.csv", header=FALSE )
nmd_tandem <- read.csv( "../data/nmd_out_2_tandems.csv", header=FALSE )
names( nmd_alpha ) <- names( nmd_tandem ) <- c( 'g1', 'g2', 'g1_nmd', 'g2_nmd' )
# summary( nmd_alpha )  ; summary( nmd_tandem )
junction_a_temp <- merge( x=junction_a, y=nmd_alpha[, c(1, 3)], by.x="pair_1", by.y="g1"  )
junction_a_nmd <- merge( x=junction_a_temp, y=nmd_alpha[, c(2, 4)], by.x="pair_2", by.y="g2"  )
junction_t_temp <- merge( x=junction_t, y=nmd_tandem[, c(1, 3)], by.x="pair_1", by.y="g1"  )
junction_t_nmd <- merge( x=junction_t_temp, y=nmd_tandem[, c(2, 4)], by.x="pair_2", by.y="g2"  )
print('do some kinds of junctions get more nmd?')
print( 'alphas' )
nmd_mod_a1 <- glm( cbind( junction_a_nmd$g1_nmd, junction_a_nmd$g2_nmd ) ~ junction_a_nmd$class, family=binomial )
summary( nmd_mod_a1 )$coef
print( 'tandems' )
nmd_mod_t1 <- glm( cbind( junction_t_nmd$g1_nmd, junction_t_nmd$g2_nmd ) ~ junction_t_nmd$class, family=binomial )
summary( nmd_mod_t1 )$coef
print('NO <- there do not appear to be differences between junction classes')
print('do qualitatively conserved junctions get less nmd?')
print( 'alphas' )
nmd_mod_a2 <- glm( cbind( junction_a_nmd$g1_nmd, junction_a_nmd$g2_nmd ) ~junction_a_nmd$one_gene_alts_only, family=binomial)
summary( nmd_mod_a2 )$coef
print( 'tandems' )
nmd_mod_t2 <- glm( cbind( junction_t_nmd$g1_nmd, junction_t_nmd$g2_nmd ) ~junction_t_nmd$one_gene_alts_only, family=binomial)
summary( nmd_mod_t2 )$coef
print('NO  <- there appears to be no difference')
print('do quantitative conserved junctions get less nmd?')
print( 'alphas' )
nmd_mod_a3 <- glm( cbind( junction_a_nmd$g1_nmd, junction_a_nmd$g2_nmd ) ~ junction_a_nmd$quant_con, family=binomial )
summary( nmd_mod_a3 )$coef
print( 'tandems' )
nmd_mod_t3 <- glm( cbind( junction_t_nmd$g1_nmd, junction_t_nmd$g2_nmd ) ~ junction_t_nmd$quant_con, family=binomial )
summary( nmd_mod_t3 )$coef
print('NO  <- there still appears to be no difference')
table( junction_a_nmd$g1_nmd, junction_a_nmd$g2_nmd )
table( junction_t_nmd$g1_nmd, junction_t_nmd$g2_nmd )
@
\section*{General expression stuffs!}
Question <- how close in general expression are paralog pairs? In order to answer this question we'll need go back to the \textit{ABC\_raw\_lens.tsv} file. I'll look up the overall expression for each member of each pair, and calculate a proportional difference.
<<label=expression_Data_munging, echo=FALSE, results=hide>>=
# so what is the actual question? <- is there an association between expression levels and conservation?
# how similar is expression between partners?
# test 1: if there is conservation, are the expression levels more similar?
# test 2: how well does expression of one paralog predict that of the other?
# expression needs to be expressed (ha-ha) as RPKM
# reads per kilobase per million= [# of mapped reads]/[length of transcript in kilo base]/[million mapped reads]
all_reads_a <- data.frame( all_reads[ all_reads$gene_name %in% junction_a$pair_1, c(1, 5, 7, 10) ],
all_reads[ all_reads$gene_name %in% junction_a$pair_2, c(1, 5, 7, 10) ] )
names( all_reads_a ) <- c( 'pair_1', 'g1_length', 'g1_reads', 'g1_RPKM', 'pair_2', 'g2_length', 'g2_reads', 'g2_RPKM' )
all_reads_a$pair <- paste( all_reads_a$pair_1, '-', all_reads_a$pair_2, coll='', sep='' )
all_reads_a$len_diff <- abs( all_reads_a$g1_length - all_reads_a$g2_length )
all_reads_a$read_diff <- abs( all_reads_a$g1_reads - all_reads_a$g2_reads )
all_reads_a$RPKM_diff <- abs( all_reads_a$g1_RPKM - all_reads_a$g2_RPKM )
all_reads_t <- data.frame( all_reads[ all_reads$gene_name %in% junction_t$pair_1, c(1, 5, 7, 10) ],
all_reads[ all_reads$gene_name %in% junction_t$pair_2, c(1, 5, 7, 10) ])
names( all_reads_t ) <- c( 'pair_1', 'g1_length', 'g1_reads', 'g1_RPKM', 'pair_2', 'g2_length', 'g2_reads', 'g2_RPKM' )
all_reads_t$pair <- paste( all_reads_t$pair_1, '-', all_reads_t$pair_2, coll='', sep='' )
all_reads_t$len_diff <- abs( all_reads_t$g1_length - all_reads_t$g2_length )
all_reads_t$read_diff <- abs( all_reads_t$g1_reads - all_reads_t$g2_reads )
all_reads_t$RPKM_diff <- abs( all_reads_t$g1_RPKM - all_reads_t$g2_RPKM )
# to what extent are 0-read cons a problem?
dim( junction_t[ junction_t$g1r1cons==0 | junction_t$g1r2cons==0 | junction_t$g1r3cons==0 | junction_t$g2r1cons==0 | junction_t$g2r2cons==0 | junction_t$g2r3cons==0, ] )
dim( junction_a[ junction_a$g1r1cons==0 | junction_a$g1r2cons==0 | junction_a$g1r3cons==0 | junction_a$g2r1cons==0 | junction_a$g2r2cons==0 | junction_a$g2r3cons==0, ] )
@
<<label=general_expression_differences, echo=FALSE>>=
# so what is the actual question? <- is there an association between expression levels and conservation?
# how similar is expression between partners?
# test 1: if there is conservation, are the expression levels more similar?
# test 2: how well does expression of one paralog predict that of the other?
# test 3:
sings <- read.table( "../data/singletons.txt", header=F )
dupes <- read.table( "../data/duplicates.txt", header=F )
filtered <- read.table( "../data/ABC_filtered.tsv", sep='\t', header=T )
filtered <- join( filtered, all_reads[,c(1:10)], 'gene_name' )
filtered$all_nrms <- rowSums( filtered[, c(6,8,10)] )
filtered$all_alts <- rowSums( filtered[, c(5,7,9)] )
filtered$sing_dupe <- factor( ifelse( filtered$gene_name %in% sings$V1, "S",
ifelse( filtered$gene_name %in% dupes$V1, "D", NA ) ))
filtered$prop_diff <- filtered$all_nrms / filtered$all_alts
# we need to filter the filtered dataframe somewhat <- ditch NA's and reads >10^5
filtered <- na.omit( filtered[ filtered$all_nrms <= 10^5 & filtered$all_alts <= 10^5 & filtered$all_nrms >0 ,] )
print('Frequency of AS')
# there is more AS going on in duplicates!
bubble_mod <- lm( filtered$all_alts/filtered$RKPM ~ filtered$sing_dupe )
summary( bubble_mod )$coef
print( 'there is more AS in duplicates' )
print( 'mean standardized AS per rep.' )
by( (filtered$all_alts/filtered$RKPM), filtered$sing_dupe, mean )/3
# Variety of AS # NB: this may take some time to run on a desktop
temp <- rep( NA, nlevels( filtered$gene_name ) )
for(i in 1:nlevels( filtered$gene_name ) ) {
temp[i] <- nrow( filtered[ filtered$gene_name== levels( filtered$gene_name )[i] ,] )
}
getwd()
dir()
setwd("../scripts")
getwd()
dir()
Stangle( "TackArabidopsisScript.Rnw" )
Rtangle( "TackArabidopsisScript.Rnw" )
Stangle( "TackArabidopsisScript.Rnw", encoding = "UTF-8" )
sewtwd("/Volumes/Old_HD/DocStore/=WORK=/TackThaliana/Github_Dryad_repo/scripts/")
setwd("/Volumes/Old_HD/DocStore/=WORK=/TackThaliana/Github_Dryad_repo/scripts/")
Stangle( "TackArabidopsisScript.Rnw", encoding = "UTF-8" )
